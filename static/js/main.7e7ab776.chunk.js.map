{"version":3,"sources":["routes/Home.js","routes/Survey.js","assets/link.png","routes/Result.js","App.js","index.js"],"names":["Home","useEffect","Scene","0","1","2","transform","opacity","1.5","easing","EASE_OUT","selector","iterationCount","playCSS","id","src","className","to","pathname","style","textDecoration","onMouseEnter","e","target","background","onMouseLeave","surveyResult","Survey","history","surveyData","description","answer","text","value","pageRate","length","useState","progress","setProgress","isLoading","setIsLoading","currentScreen","setCurrentScreen","btnEnter","color","btnLeave","goToResult","cntOne","cntTwo","Object","values","forEach","val","route","push","state","result","isAfterSurvey","enableMouseEvents","index","onChangeIndex","curScreen","steps","position","width","maxWidth","display","map","survey","ans","idx","onClick","page","LinearProgress","variant","height","borderRadius","colorPrimary","barColorPrimary","location","setTimeout","match","params","console","log","window","CircularProgress","size","onCopy","alert","href","class","image","alt","path","exact","component","Result","ReactDOM","render","App","document","getElementById"],"mappings":"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","file":"static/js/main.7e7ab776.chunk.js","sourcesContent":["import React, { useEffect } from 'react';\nimport './Home.css';\nimport Button from '@material-ui/core/Button';\nimport { Link } from 'react-router-dom';\nimport Scene from \"scenejs\";\n\n\nexport default function Home () {\n    useEffect(() => {\n        var scene = new Scene({\n            \".circle1\": {\n              0: {\n                \"border-width\": \"70px\",\n                \"transform\": \"scale(0)\",\n              },\n              1: {\n                \"border-width\": \"0px\",\n                \"transform\": \"scale(1.5)\",\n              },\n              2: 1,\n            },\n            \".triangle\": {\n              0: {\n                transform: \"rotate(0deg) translate(0px) scale(0.5)\",\n                opacity: 1,\n              },\n              1.5: {\n                transform: \"rotate(40deg) translate(100px) scale(1)\",\n                opacity: 0,\n              },\n            },\n            \".rectangle1\": {\n              0: {\n                opacity: 1,\n                transform: \"rotate(0deg) translate(0px) scale(0.3)\",\n              },\n              1.5: {\n                transform: \"rotate(-40deg) translate(-100px) scale(0.9)\",\n                opacity: 0,\n              },\n            },\n            \".rectangle2\": {\n              0: {\n                transform: \" translate(0px, 0px) rotate(0deg) scale(0.3)\",\n                opacity: 1,\n              },\n              1.5: {\n                transform: \"translate(100px, -100px) rotate(70deg) scale(0.7)\",\n                opacity: 0,\n              },\n            },\n            \".circle2\": {\n              0: {\n                transform: \" translate(0px, 0px) scale(0.7)\",\n                opacity: 1,\n              },\n              1.5: {\n                transform: \"translate(-100px, -50px) scale(1)\",\n                opacity: 0,\n              },\n            },\n            \".star1\": {\n              0: {\n                transform: \"translateY(0px) rotate(0deg) scale(0.5)\",\n                opacity: 1,\n              },\n              1.5: {\n                transform: \"translateY(-100px) rotate(90deg) scale(1)\",\n                opacity: 0,\n              }\n            }\n          }, {\n            easing: Scene.EASE_OUT,\n            selector: true,\n            iterationCount: \"infinite\"\n          }).playCSS();\n    }, [])\n    \n    const StartTestButton = React.createRef();\n\n    return (\n        <div id=\"main-container\">\n            <div id=\"logo-ontainer\">\n                <img id=\"logo\" src=\"https://cdn.pixabay.com/photo/2017/11/26/15/16/smiley-2979107_960_720.jpg\" />\n            </div>\n            <div id=\"content-container\">\n                <div id=\"main-text\">심리 테스트</div>\n                <div id=\"sub-text\">심리테스트를 통해 나를 알아보세요!</div>\n            </div>\n            <div id=\"amimation-container\">\n                <div className=\"motion\">\n                    <div className=\"circle circle1\"></div>\n                    <div className=\"circle circle2\"></div>\n                    <div className=\"triangle\"></div>\n                    <div className=\"rectangle rectangle1\"></div>\n                    <div className=\"rectangle rectangle2\"></div>\n                    <div className=\"star star1\">\n                        <div className=\"star\">\n                            <div className=\"star\">\n                                <div className=\"star\">\n                                    <div className=\"star\"></div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div id=\"button-container\">\n                <Link to={{pathname: '/survey'}} style={{ textDecoration: 'none' }}>\n                    <button id=\"btn-start-test\"\n                        onMouseEnter={(e) => e.target.style.background = '#64b5f6cc' }\n                        onMouseLeave={(e) => e.target.style.background = '#64b5f6' }\n                    >\n                        심리 테스트 시작</button>\n                </Link>\n            </div>\n        </div>\n    )\n}","import React, { useEffect, useState } from 'react';\nimport './Survey.css';\nimport SwipeableViews from 'react-swipeable-views';\nimport LinearProgress from '@material-ui/core/LinearProgress'\n\nconst surveyResult = {};\n\nconst Survey = ({ history }) => {\n    const surveyData = [\n        {\n            description: '문항을 넣어주세요. 그리고 1번과 2번 둘중 하나를 골라주세요.',\n            answer: [{\n                text: '긍정적인 1번 답입니다.',\n                value: 1\n            }, {\n                text: '부정적인 1번 답입니다.',\n                value: 2\n            }]\n        }, {\n            description: '2번째 문항을 넣어주세요. 그리고 1번과 2번 둘중 하나를 골라주세요.',\n            answer: [{\n                text: '긍정적인 2번 답입니다.',\n                value: 1\n            }, {\n                text: '부정적인 2번 답입니다.',\n                value: 2\n            }]\n        }, {\n            description: '3번째 문항을 넣어주세요. 그리고 1번과 2번 둘중 하나를 골라주세요.',\n            answer: [{\n                text: '긍정적인 3번 답입니다.',\n                value: 1\n            }, {\n                text: '부정적인 3번 답입니다.',\n                value: 2\n            }]\n        }, {\n            description: '4번째 문항을 넣어주세요. 그리고 1번과 2번 둘중 하나를 골라주세요.',\n            answer: [{\n                text: '긍정적인 4번 답입니다.',\n                value: 1\n            }, {\n                text: '부정적인 4번 답입니다.',\n                value: 2\n            }]\n        }, {\n            description: '5번째 문항을 넣어주세요. 그리고 1번과 2번 둘중 하나를 골라주세요.',\n            answer: [{\n                text: '긍정적인 5번 답입니다.',\n                value: 1\n            }, {\n                text: '부정적인 5번 답입니다.',\n                value: 2\n            }]\n        }\n    ];\n\n    const pageRate =  100 / surveyData.length;\n    const [progress, setProgress] = useState(pageRate);\n    const [isLoading, setIsLoading] = useState(true);\n    const [currentScreen, setCurrentScreen] = useState(0);\n\n    const btnEnter = (e) => {\n        e.target.style.background = '#388e3c';\n        e.target.style.color = '#fff';\n    }\n    const btnLeave = (e) => {\n        e.target.style.background = '#eee';\n        e.target.style.color = '#000';\n    }\n\n    const handleNext = (page, value) => {\n        // 페이지에서 누른 버튼 값 으로 결과 저장\n        surveyResult[page] = value;\n\n        // 현재 페이지는 바뀌기 전이라 인덱스 0부터 포함하여 +2를 해야함\n        if(currentScreen + 2 > surveyData.length) {\n            goToResult(surveyResult);\n            return;\n        }\n        setCurrentScreen((curScreen) => curScreen + 1);\n        setProgress((currentScreen + 2) * pageRate);\n    };\n\n    const handleStepChange = (curScreen) => {\n        setCurrentScreen((curScreen));\n        setProgress((curScreen + 1) * pageRate);\n    };\n    \n    // 어디 결과 페이지로 갈지 분기\n    const goToResult = (surveyResult) => {\n        let cntOne = 0;\n        let cntTwo = 0;\n        Object.values(surveyResult).forEach((val) => {\n            if(val == 1) {\n                cntOne++;\n            } else if (val == 2) {\n                cntTwo++;\n            }\n        });\n\n        // 라우팅\n        let route = '';\n        if(cntOne === surveyData.length) {\n            route = 'onlyOne';\n        } else if(cntTwo === surveyData.length) {\n            route = 'onlyTwo';\n        } else {\n            route = 'else';\n        }\n\n        history.push({\n            pathname: `/result/${route}`,\n            state: {\n                result: surveyResult,\n                cntOne,\n                cntTwo,\n                isAfterSurvey: true\n            }\n        });\n    };\n\n    useEffect(() => {\n        setIsLoading(false);\n    }, []);\n\n    return isLoading ? null : (\n        <div id=\"main-container\">\n            <SwipeableViews \n                enableMouseEvents={true} \n                index={currentScreen}\n                onChangeIndex={handleStepChange}\n                steps={surveyData.length - 1}\n                position=\"static\"\n                style={{width: '100%', maxWidth: 400, display: 'inline-block'}}>\n                \n                {surveyData.map((survey, index) => {\n                    return (\n                        <div key={index}>\n                            <div  className=\"title\">Question.{index + 1}</div>\n                            <div  className=\"description\">{survey.description}</div>\n                            <div  className=\"button-container\">\n                                {survey.answer.map((ans, idx) => (\n                                    <button \n                                        key={`${index}_${idx}`} \n                                        className=\"survey-button\" \n                                        onMouseEnter={btnEnter} \n                                        onMouseLeave={btnLeave}\n                                        onClick={() => handleNext(index + 1, ans.value)} >{idx + 1}. {ans.text}</button>\n                                ))}\n                            </div>\n                        </div>\n                    )\n                })}\n            </SwipeableViews>\n            <div></div>\n            <div id=\"progress-container\">\n            <div id=\"progress-text-container\">{currentScreen + 1} / {surveyData.length}</div>\n                <LinearProgress value={progress} variant=\"determinate\" style={{maxWidth: 400, height: 10, borderRadius: 15, colorPrimary: '#fff', barColorPrimary: '#000'}} />\n            </div>\n        </div>\n    );\n}\n\nexport default Survey;\n\n","export default __webpack_public_path__ + \"static/media/link.57b9d268.png\";","import React, { useEffect, useState } from 'react';\nimport './Result.css';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { Link } from 'react-router-dom';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport image from '../assets/link.png';\n\nexport default (state) => {\n    const [isLoading, setIsLoading] = useState(true);\n    const [copy, setCopy] = useState('');\n\n    useEffect(() => {\n        // 설문 후에 결과 창으로 온거면 3초후에 창 띄움\n        if(state?.location?.state?.isAfterSurvey) {\n            setTimeout(() => {\n                setIsLoading(false);\n            }, 3000);\n        } else {\n            setIsLoading(false);\n        }\n    }, []);\n\n    // 설명\n    let description = '';\n    if(state?.match?.params?.id === 'onlyOne') {\n        description = `당신은 전부 1번만 찍었군요... 그래서 onlyOne 페이지로 이동하였습니다.`;\n    } else if(state?.match?.params?.id === 'onlyTwo') {\n        description = `당신은 전부 2번만 찍었군요... 그래서 onlyTwo 페이지로 이동하였습니다.`;\n    } else {\n        description = `당신은 번호를 골고루 찍었군요... 그래서 else 페이지로 이동하였습니다.`;\n    }\n\n    const onCopy = () => {\n        alert('URL이 복사되었습니다.');\n    }\n\n    console.log(window);\n    // console.log(state.location.state.result);\n\n    return isLoading ? (\n        <div id=\"loading-container\">\n            <CircularProgress size={200}/>\n            <div id=\"loading-text\">결과를 집계중입니다.<p>3초뒤에 이동합니다</p></div>\n        </div>\n    ) : (\n        <div id=\"main-container\">\n            <div id=\"content-container\">\n                <div id=\"main-text\">결과 입니다.</div>\n                <div id=\"sub-text\">{description}</div>\n            </div>\n            <div id=\"logo-ontainer\">\n                <img id=\"logo\" src=\"https://cdn.pixabay.com/photo/2017/11/26/15/16/smiley-2979107_960_720.jpg\" />\n            </div>\n            <div id=\"button-container\">\n                <Link to={{pathname: '/'}} style={{ textDecoration: 'none' }}>\n                    <button id=\"btn-start-test\"\n                        onMouseEnter={(e) => e.target.style.background = '#64b5f6cc' }\n                        onMouseLeave={(e) => e.target.style.background = '#64b5f6' }\n                    >\n                        다시하기</button>\n                </Link>\n            </div>\n            <div id=\"link-container\">\n                <CopyToClipboard onCopy={onCopy} text={window.location.href}>\n                    <button class=\"url-copy-btn\"><img class=\"url-copy-img\" src={image} alt=\"URL 복사\" /></button>\n                </CopyToClipboard>\n\n            </div>\n        </div>\n    )\n}","import React from 'react';\nimport { HashRouter, Route } from 'react-router-dom';\nimport Home from './routes/Home';\nimport Survey from './routes/Survey';\nimport Result from './routes/Result';\n\nexport default () => {\n  return <HashRouter>\n    <Route path=\"/\" exact={true} component={Home}></Route>\n    <Route path=\"/survey\" component={Survey}></Route>\n    <Route path=\"/result/:id\" component={Result}></Route>\n  </HashRouter>\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}